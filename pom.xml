<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.volunteering</groupId>
    <artifactId>resource-management</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>resource-management</name>
    <description>Application for Resource Management</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>


        <!--docker build related properties-->
        <dockerSourceDirectory>${project.basedir}/src/main/docker</dockerSourceDirectory>
        <dockerOutputDirectory>${project.build.directory}/rootfs</dockerOutputDirectory>
        <win.native.resources>${project.build.directory}/winres</win.native.resources>

        <frontend.groupId>${project.groupId}</frontend.groupId>
        <frontend.artifactId>${project.artifactId}-client</frontend.artifactId>
        <frontend.version>${project.version}</frontend.version>

        <backend.image.name>isu/${project.artifactId}-backend</backend.image.name>
        <backend.image.alias>backend</backend.image.alias>

        <frontend.image.name>isu/${project.artifactId}-frontend</frontend.image.name>
        <frontend.image.alias>frontend</frontend.image.alias>

        <db.image.name>isu/${project.artifactId}-db</db.image.name>
        <db.image.alias>mongodb</db.image.alias>

        <version.docker-maven-plugin>0.28.0</version.docker-maven-plugin>
        <version.buildnumber-maven-plugin>1.4</version.buildnumber-maven-plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!--        <dependency>
                    <groupId>de.flapdoodle.embed</groupId>
                    <artifactId>de.flapdoodle.embed.mongo</artifactId>
                    <scope>test</scope>
                </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>com.github.librepdf</groupId>
            <artifactId>openpdf</artifactId>
            <version>1.2.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.0.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--fetch backend and frontend distributables from maven repository-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy backend assembly</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dockerOutputDirectory}/backend</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <overWrite>true</overWrite>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy frontend assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dockerOutputDirectory}/frontend</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${frontend.groupId}</groupId>
                                    <artifactId>${frontend.artifactId}</artifactId>
                                    <version>${frontend.version}</version>
                                    <classifier>bin</classifier>
                                    <overWrite>true</overWrite>
                                    <type>tar.gz</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack frontend assembly for windows native deploy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${win.native.resources}</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${frontend.groupId}</groupId>
                                    <artifactId>${frontend.artifactId}</artifactId>
                                    <version>${frontend.version}</version>
                                    <classifier>bin</classifier>
                                    <overWrite>true</overWrite>
                                    <type>tar.gz</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <stripVersion>true</stripVersion>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create windows native application bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/windows-native/bin.xml</descriptor>
                            </descriptors>
                            <finalName>resource-management-bin</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create windows native install kit</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/windows-native/dist.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--copy docker files-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy docker files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dockerOutputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${dockerSourceDirectory}</directory>
                                    <targetPath>${dockerOutputDirectory}</targetPath>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${project.build.sourceDirectory}/../resources</directory>
                                    <targetPath>${dockerOutputDirectory}/db/fillDb</targetPath>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.json</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--building docker images-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${version.docker-maven-plugin}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>build docker images</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${backend.image.alias}</alias>
                                    <name>${backend.image.name}</name>
                                    <build>
                                        <skip>false</skip>
                                        <dockerFileDir>${dockerOutputDirectory}/backend</dockerFileDir>
                                    </build>
                                </image>
                                <image>
                                    <alias>${frontend.image.alias}</alias>
                                    <name>${frontend.image.name}</name>
                                    <build>
                                        <skip>false</skip>
                                        <dockerFileDir>${dockerOutputDirectory}/frontend</dockerFileDir>
                                    </build>
                                </image>
                                <image>
                                    <alias>${db.image.alias}</alias>
                                    <name>${db.image.name}</name>
                                    <build>
                                        <skip>false</skip>
                                        <dockerFileDir>${dockerOutputDirectory}/db</dockerFileDir>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>save backend docker image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>save</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${backend.image.alias}</alias>
                                    <name>${backend.image.name}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>save frontend docker image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>save</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${frontend.image.alias}</alias>
                                    <name>${frontend.image.name}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>save db docker image</id>
                        <phase>install</phase>
                        <goals>
                            <goal>save</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${db.image.alias}</alias>
                                    <name>${db.image.name}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>save docker image</id>-->
                        <!--<phase>install</phase>-->
                        <!--<goals>-->
                            <!--<goal>save</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<images>-->
                                <!--<image>-->
                                    <!--<alias>${backend.image.alias}</alias>-->
                                    <!--<name>${backend.image.name}</name>-->
                                <!--</image>-->
                                <!--<image>-->
                                    <!--<alias>${frontend.image.alias}</alias>-->
                                    <!--<name>${frontend.image.name}</name>-->
                                <!--</image>-->
                                <!--<image>-->
                                    <!--<alias>${db.image.alias}</alias>-->
                                    <!--<name>${db.image.name}</name>-->
                                <!--</image>-->
                            <!--</images>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <logStdout>true</logStdout>
                    <images>
                        <image>
                            <build>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                            </build>
                            <run>
                                <skip>true</skip>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--profiles for running the container using maven cli-->
    <profiles>
        <profile>
            <id>db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <logStdout>true</logStdout>
                            <images>
                                <image>
                                    <name>${db.image.name}</name>
                                    <alias>${db.image.alias}</alias>
                                    <run>
                                        <skip>false</skip>
                                        <namingStrategy>alias</namingStrategy>
                                        <hostname>${env.HOSTNAME}</hostname>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>3</retry>
                                        </restartPolicy>
                                        <memory>1024000000</memory>
                                        <memorySwap>-1</memorySwap>
                                        <extraHosts>
                                            <host>localhosts:127.0.0.1</host>
                                        </extraHosts>
                                        <cmd>demo</cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>apps</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven-plugin}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <logStdout>true</logStdout>
                            <images>
                                <image>
                                    <name>${backend.image.name}</name>
                                    <alias>${backend.image.alias}</alias>
                                    <run>
                                        <skip>false</skip>
                                        <namingStrategy>alias</namingStrategy>
                                        <hostname>${env.HOSTNAME}</hostname>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>3</retry>
                                        </restartPolicy>
                                        <memory>1024000000</memory>
                                        <memorySwap>-1</memorySwap>
                                        <extraHosts>
                                            <host>localhosts:127.0.0.1</host>
                                        </extraHosts>
                                    </run>
                                </image>
                                <image>
                                    <name>${frontend.image.name}</name>
                                    <alias>${frontend.image.alias}</alias>
                                    <run>
                                        <skip>false</skip>
                                        <namingStrategy>alias</namingStrategy>
                                        <hostname>${env.HOSTNAME}</hostname>
                                        <network>
                                            <mode>host</mode>
                                        </network>
                                        <restartPolicy>
                                            <name>on-failure</name>
                                            <retry>3</retry>
                                        </restartPolicy>
                                        <memory>1024000000</memory>
                                        <memorySwap>-1</memorySwap>
                                        <extraHosts>
                                            <host>localhosts:127.0.0.1</host>
                                        </extraHosts>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
