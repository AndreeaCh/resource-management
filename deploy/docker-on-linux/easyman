#!/bin/bash

function cmd_start() {

    if [ -z ${easyman_home} ]; then
        echo "Installation directory is unknown. It should be configured in ${HOME}/.easyman"
        exit 1
    fi

    IMPORT_DIR=$easyman_home/import
    APPLICATION_PROPERTIES=$easyman_home/application.properties

    # add write permission for container
    LOGS_DIR=$easyman_home/logs
    chmod o+w $LOGS_DIR

    DATETIME=$(date +"%Y-%m-%d_%H-%M-%S")
    LOGFILE=$LOGS_DIR/start-$DATETIME.log

    echo "START_1/3 Start db container"
	docker run --name mongodb \
	    --network host \
	    --hostname $HOSTNAME \
	    --restart on-failure:3 \
	    --memory ${db_memory} \
	    --memory-swap -1 \
	    --volume $LOGS_DIR:/home/container/logs \
	    --volume $IMPORT_DIR:/root/import \
	    isu/resource-management-db 2>&1 > $LOGFILE &

    echo "START_2/3 Start backend container"
	docker run --name backend \
	    --network host \
	    --hostname $HOSTNAME \
	    --restart on-failure:3 \
	    --memory ${backend_memory} \
	    --memory-swap -1 \
	    --volume $LOGS_DIR:/home/container/logs \
	    --volume $APPLICATION_PROPERTIES:/home/container/config/application.properties \
	isu/resource-management-backend 2>&1 >> $LOGFILE &

    echo "START_3/3 Start frontend container, connected to ${backend_address}"
    docker run --name frontend \
        --network host \
	    --hostname $HOSTNAME \
	    --restart on-failure:3 \
	    --memory ${frontend_memory} \
	    --memory-swap -1 \
	    --volume $LOGS_DIR:/home/container/logs \
	    --env SERVER_ADDRESS=${backend_address} \
    isu/resource-management-frontend 2>&1 >> $LOGFILE &

    echo "Containers are started"
}

function cmd_stop() {

    echo "STOP_1/3 Stopping frontend"
    docker stop frontend

    echo "STOP_2/3 Stopping backend"
    docker stop backend

    echo "STOP_3/3 Stopping database"
    docker stop mongodb
}

function cmd_list() {
    # filter docker container list, show status
    docker ps -a --no-trunc --filter name="^/(frontend|backend|mongodb)$"
}

function cmd_list_config() {
     echo -e "Listing .easyman config file located in $HOME directory :"
     echo -e "INSTALL_PATH=$INSTALL_PATH"
     echo -e "SERVER_ADDRESS=$SERVER_ADDRESS"
     echo -e "FRONTEND_RAM=$FRONTEND_RAM"
     echo -e "BACKEND_RAM=$BACKEND_RAM"
     echo -e "DB_RAM=$DB_RAM"
}

function cmd_uninstall() {

    if [ -z ${easyman_home} ]; then
        echo "Installation directory is unknown. It should be configured in ${HOME}/.easyman"
        exit 1
    fi

    echo "UNINSTALL Uninstall the application at the location '$easyman_home'"

    echo "UNINSTALL_1/3 Stopping any running application container"
    docker rm -f $(docker ps -a -q --no-trunc --filter name="^/(frontend|backend|mongodb)$)")

    echo "UNINSTALL_2/3 Removing images"
    docker rmi -f $(docker images -q "isu/resource-management-*")

    echo "UNINSTALL_3/3 Removing application files"
    rm -rf easyman_home/
}

function cmd_help()
{
     echo -e "\teasyman start"
     echo -e "\teasyman stop"
     echo -e "\teasyman list"
     echo -e "\teasyman config"
     echo -e "\teasyman uninstall"
     echo -e "\teasyman help"
}

# INSTALL_PATH=$HOME/apps/easy-manage
CONFIG_PATH=$HOME/.easyman

# load configuration
source $CONFIG_PATH

target="${1}"

case "${target}" in
 start )
  easyman_home=$INSTALL_PATH
  backend_address=${SERVER_ADDRESS:-localhost}
  backend_memory=${BACKEND_RAM:-1024000000}
  frontend_memory=${FRONTEND_RAM:-1024000000}
  db_memory=${DB_RAM:-1024000000}
  cmd_start
  ;;
 stop )
  cmd_stop
  ;;
 list | -l )
  cmd_list
  ;;
 config )
  cmd_list_config
  ;;
 uninstall )
  cmd_uninstall
  ;;
  help | -h )
  cmd_help
  ;;
 * )
  cmd_help
  ;;
esac
